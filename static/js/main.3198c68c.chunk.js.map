{"version":3,"sources":["components/Notifications/Notifications.js","redux/actions.js","components/Form/Form.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Logo/Logo.js","App.js","redux/reducers.js","redux/store.js","index.js"],"names":["id","Alert","disableAlert","props","change","clearTimeout","setTimeout","Component","addContact","createAction","handleDelete","handleFilter","postContacts","Form","state","name","number","alert","handleChange","event","target","value","setState","handleSubmit","preventDefault","contacts","contact","find","changeAlert","bool","prevProps","prevState","isExists","this","TransitionGroup","className","classes","notif","CSSTransition","timeout","classNames","onSubmit","label","type","required","onChange","placeholder","button","mapDispatchToProps","actions","connect","items","deleteContact","onClick","addContacts","filter","toLowerCase","includes","component","styles","contactsUl","map","item","in","length","toFilter","Logo","isLoad","main","App","ContactList","createReducer","contactsActions","action","payload","localStorage","setItem","JSON","stringify","_","combineReducers","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3198c68c.chunk.js","sourcesContent":["  \r\nimport React, { Component } from \"react\";\r\n\r\nlet id;\r\nclass Alert extends Component {\r\n  disableAlert = () => {\r\n    this.props.change(false);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(id);\r\n  }\r\n\r\n  render() {\r\n    id = setTimeout(() => {\r\n      this.disableAlert();\r\n    }, 1700);\r\n\r\n    return (\r\n      <h4>\r\n        Warning! You are trying to add contact, which has already been added!\r\n      </h4>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Alert;","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"contact/add\");\r\n\r\nconst handleDelete = createAction(\"contact/delete\");\r\n\r\nconst handleFilter = createAction(\"contact/filter\");\r\n\r\nconst postContacts = createAction(\"contacts/post\");\r\n\r\nexport default {\r\n  addContact,\r\n  handleDelete,\r\n  handleFilter,\r\n  postContacts,\r\n};","import classes from \"./Form.module.scss\";\r\nimport React, { Component } from \"react\";\r\nimport { v4 as id } from \"uuid\";\r\nimport Alert from \"../Notifications/Notifications\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport actions from \"../../redux/actions\";\r\nimport { connect } from \"react-redux\";\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    alert: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.isExists !== this.props.isExists) {\r\n      this.setState({ alert: this.props.isExists });\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { contacts, addContact } = this.props;\r\n    const contact = {\r\n      id: id(),\r\n      number: number,\r\n      name: name,\r\n    };\r\n    if (contacts.find(({ name }) => name === contact.name)) {\r\n      this.setState({\r\n        alert: true,\r\n      });\r\n      return;\r\n    }\r\n    addContact(contact);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  changeAlert = (bool) => {\r\n    this.setState({ alert: bool });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const { handleChange, handleSubmit } = this;\r\n    return (\r\n      <>\r\n        <TransitionGroup className={classes.notif}>\r\n          {this.state.alert && (\r\n            <CSSTransition timeout={250} classNames={classes}>\r\n              <Alert change={this.changeAlert} />\r\n            </CSSTransition>\r\n          )}\r\n        </TransitionGroup>\r\n        <form onSubmit={handleSubmit}>\r\n          <label className={classes.label}>Name: </label>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            name=\"name\"\r\n            onChange={handleChange}\r\n            placeholder=\"Enter your name please\"\r\n            value={name}\r\n          />\r\n          <label className={classes.label}>Number: </label>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            name=\"number\"\r\n            onChange={handleChange}\r\n            placeholder=\"Enter your phone number \"\r\n            value={number}\r\n          />\r\n          <button type=\"submit\" className={classes.button}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ contacts }) => ({\r\n  contacts: contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addContact: actions.addContact,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./ContactListItem.module.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../redux/actions\";\r\n\r\nconst ContactlistItem = ({ id, number, name, deleteContact }) => {\r\n  return (\r\n    <>\r\n      <li>\r\n        <p>{name}</p>\r\n        <p>{number}</p>\r\n        <button\r\n          className={classes.button}\r\n          type=\"button\"\r\n          onClick={() => deleteContact(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nContactlistItem.propTypes = {\r\n  number: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  deleteContact: actions.handleDelete,\r\n};\r\nexport default connect(null, mapDispatchToProps)(ContactlistItem);","import React from \"react\";\r\nimport { ContactlistItem } from \"../ContactListItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./ContactList.module.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../redux/actions\";\r\n\r\nconst Contactlist = ({ contacts }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={styles.contactsUl}>\r\n      {contacts.map((item) => {\r\n        const { name, id, number } = item;\r\n        return (\r\n          <CSSTransition\r\n            key={id}\r\n            timeout={250}\r\n            classNames={styles}\r\n            in={contacts.length > 0}\r\n          >\r\n            <ContactlistItem name={name} number={number} id={id} />\r\n          </CSSTransition>\r\n        );\r\n      })}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nContactlist.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const {\r\n    contacts: { items, filter },\r\n  } = state;\r\n  const filteredNames = items.filter((contact) => {\r\n    return contact.name.toLowerCase().includes(filter.toLowerCase());\r\n  });\r\n\r\n  return {\r\n    contacts: filteredNames,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  deleteContact: actions.addContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contactlist);","import React from \"react\";\r\nimport classes from \"./Filter.module.scss\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../redux/actions\";\r\n\r\nconst Filter = ({ toFilter, value }) => {\r\n  return (\r\n    <CSSTransition in={value !== \"\"} timeout={0}>\r\n      <>\r\n        <label className={classes.label}>Filter:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          placeholder=\"Filter contacts if necessary\"\r\n          onChange={(event) => {\r\n            return toFilter(event.target.value);\r\n          }}\r\n        />\r\n      </>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts }) => ({\r\n  value: contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  toFilter: actions.handleFilter,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React, { Component } from \"react\";\r\nimport classes from \"./Logo.module.scss\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nclass Logo extends Component {\r\n  state = {\r\n    isLoad: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.setState({ isLoad: true });\r\n    }, 150);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <TransitionGroup className={classes.main}>\r\n        {this.state.isLoad && (\r\n          <CSSTransition timeout={500} classNames={classes}>\r\n            <h1>Phonebook</h1>\r\n          </CSSTransition>\r\n        )}\r\n      </TransitionGroup>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Logo;","import \"./App.css\";\nimport React from \"react\";\nimport { Form } from \"./components/Form\";\nimport { ContactList } from \"./components/ContactList\";\nimport { Filter } from \"./components/Filter\";\nimport Logo from \"./components/Logo/Logo\";\n\nexport default function App() {\n  return (\n    <>\n      <Logo />\n      <Form />\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport contactsActions from \"./actions.js\";\r\n\r\nconst addContact = (state, action) => {\r\n  const contacts = [...state, action.payload];\r\n  localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n  return contacts;\r\n};\r\n\r\nconst deleteContact = (state, action) =>\r\n  state.filter((contact) => contact.id !== action.payload);\r\n\r\nconst state = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nconst items = createReducer(state, {\r\n  [contactsActions.handleDelete]: deleteContact,\r\n  [contactsActions.addContact]: addContact,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [contactsActions.handleFilter]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport reducer from \"./reducers\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: reducer,\r\n  },\r\n});\r\n\r\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}